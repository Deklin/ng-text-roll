!function(){"use strict";angular.module("devApp",["ngSanitize","ui.router","ui.ngTextRoll"])}(),function(){"use strict";function e(e,t){e.calc={operator:"add",delta:t.getRandomInt(1,100)},e.updateNumeric=function(){var t=e.numericValue;switch(e.calc.operator){case"add":t+=e.calc.delta;break;case"substract":t-=e.calc.delta;break;case"multiply":t*=e.calc.delta}e.numericValue=t},e.changeDelta=function(){e.calc.delta=t.getRandomInt(1,100)},e.numericValue=t.getRandomInt(1,400)}e.$inject=["$scope","demoSvc"],angular.module("devApp").controller("numberCtrl",e)}(),function(){"use strict";angular.module("devApp").factory("demoSvc",function(){var e={};return e.getRandomInt=function(e,t){return parseInt(Math.random()*(t-e)+e)},e.getRandomDecimal=function(e,t){return parseFloat((Math.random()*(t-e)+e).toFixed(2))},e.getRandomDate=function(){var t=parseInt(e.getRandomDecimal(1,99)),a=new Date;return a.setDate(a.getDate()+t),a},e})}(),function(){"use strict";function e(e,t){e.calc={operator:"add",delta:t.getRandomInt(1,16)},e.rollConfig={filter:"date",filterParams:"MM/dd/yyyy",rollAll:!0},e.updateDate=function(){var t=new Date(e.dateValue.valueOf());switch(e.calc.operator){case"add":t.setDate(e.dateValue.getDate()+e.calc.delta);break;case"substract":t.setDate(e.dateValue.getDate()-e.calc.delta)}e.dateValue=t},e.changeDelta=function(){e.calc.delta=t.getRandomInt(1,16)},e.dateValue=t.getRandomDate()}e.$inject=["$scope","demoSvc"],angular.module("devApp").controller("dateCtrl",e)}(),function(){"use strict";function e(e,t){e.calc={operator:"add",delta:t.getRandomDecimal(.01,130.99)},e.rollConfig={filter:"currency"},e.rollStyle={color:"green","font-family":"Times New Roman","letter-spacing":"3px","font-style":"italic"},e.updateNumeric=function(){var t=e.numericValue;switch(e.calc.operator){case"add":t+=e.calc.delta;break;case"substract":t-=e.calc.delta;break;case"multiply":t*=e.calc.delta}e.numericValue=t},e.changeDelta=function(){e.calc.delta=t.getRandomDecimal(20.01,130.99)},e.numericValue=t.getRandomDecimal(.01,400.99)}e.$inject=["$scope","demoSvc"],angular.module("devApp").controller("currencyCtrl",e)}(),function(){"use strict";function e(e,t){e.rollConfig={filter:"date",filterParams:"MMM dd, yyyy - HH:mm:ss"};var a=function(){e.timeLeft=new Date,l=t(a,1e3)},l=t(a,1e3);e.timeLeft=new Date}e.$inject=["$scope","$timeout"],angular.module("devApp").controller("clockCtrl",e)}(),function(){"use strict";angular.module("devApp").component("controls",{templateUrl:"app/components/controls.html",bindings:{targetValue:"<",init:"<",onNewDelta:"&",onUpdate:"&",hideMultiply:"@"},controller:function(){var e=this;e.glyphs={add:"glyphicon-plus",substract:"glyphicon-minus",multiply:"glyphicon-remove"},e.updateGlyph=function(){return e.glyphs[e.init.operator]}}})}(),function(){"use strict";function e(e){e.state("index",{url:"",views:{demoNumber:{templateUrl:"app/demos/number.html",controller:"numberCtrl"},demoCurrency:{templateUrl:"app/demos/currency.html",controller:"currencyCtrl"},demoDate:{templateUrl:"app/demos/date.html",controller:"dateCtrl"},demoCountDown:{templateUrl:"app/demos/clock.html",controller:"clockCtrl"}}})}e.$inject=["$stateProvider"],angular.module("devApp").config(e)}(),angular.module("devApp").run(["$templateCache",function(e){e.put("app/components/controls.html",'<form class="form-horizontal"><label class="radio-inline"><input type="radio" name="calcOperator" ng-model="$ctrl.init.operator" value="add">Add</label> <label class="radio-inline"><input type="radio" name="calcOperator" ng-model="$ctrl.init.operator" value="substract">Substract</label> <label class="radio-inline" ng-hide="$ctrl.hideMultiply"><input type="radio" name="calcOperator" ng-model="$ctrl.init.operator" value="multiply">Multiply</label><div class="btn-group" role="group" aria-label="..."><button type="button" class="btn btn-default" ng-click="$ctrl.onUpdate()" title="{{$ctrl.init.operator}} {{$ctrl.init.operator === \'multiply\' ? \'by \' : \'\'}}{{$ctrl.init.delta}}"><span class="glyphicon" ng-class="$ctrl.updateGlyph()" aria-hidden="true"></span> {{$ctrl.init.delta}}</button> <button type="button" class="btn btn-default" ng-click="$ctrl.onNewDelta()" title="get new operator value"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button></div></form>'),e.put("app/demos/clock.html",'<div class="row"><div class="col-sm-5"><h3>Clock</h3><p>Clock demo using styling.</p></div><div class="col-sm-7"><div style="background-color: #333; text-align:center;-webkit-box-shadow:inset 0px 0px 10px #222;box-shadow:inset 0px 0px 10px #222;-webkit-border-radius:5px;border-radius:5px;"><ng-text-roll style="color: white;" target="timeLeft" height="25px" config="rollConfig"></ng-text-roll></div></div></div>'),e.put("app/demos/currency.html",'<div class="row"><div class="col-sm-6"><h3>Currency</h3>Here is a demo displaying rolling characters as a price changes. Feel free to use styles :) This demo is using:<pre>{{rollStyle|json}}</pre></div><div class="col-sm-6">The price is&nbsp;<ng-text-roll ng-style="rollStyle" target="numericValue" height="25px" config="rollConfig"></ng-text-roll>for some items.<controls init="calc" on-new-delta="changeDelta()" on-update="updateNumeric()"></controls></div></div>'),e.put("app/demos/date.html",'<div class="row"><div class="col-sm-6"><h3>Date</h3>Utilize the \'filterParams\' property of the config object to format dates (and currency, etc.). This demo is also showing rolling all characters can be enabled.</div><div class="col-sm-6">The date&nbsp;<ng-text-roll target="dateValue" height="18px" config="rollConfig"></ng-text-roll>is a date!<controls init="calc" on-new-delta="changeDelta()" on-update="updateDate()" hide-multiply="true"></controls></div></div>'),e.put("app/demos/number.html",'<div class="row"><div class="col-sm-6"><h3>Number</h3>This demo shows how ngTextRoll can tumble characters as a number changes. A blur is added when the lenth of the string changes to prevent character stacking for proportional fonts.</div><div class="col-sm-6">There are&nbsp;<ng-text-roll target="numericValue" height="16px"></ng-text-roll>items.<controls init="calc" on-new-delta="changeDelta()" on-update="updateNumeric()"></controls></div></div>')}]);