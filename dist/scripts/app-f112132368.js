!function(){"use strict";angular.module("devApp",["ngSanitize","ui.router","ui.ngTextRoll"])}(),function(){"use strict";function t(t,e){t.calc={operator:"add"},t.updateNumeric=function(){var e=t.numericValue;switch(t.calc.operator){case"add":e+=t.calc.amount;break;case"substract":e-=t.calc.amount;break;case"multiply":e*=t.calc.amount}t.numericValue=e},t.changeAmt=function(){t.calc.amount=e.getRandomInt(20,130)},t.numericValue=e.getRandomInt(1,400),t.calc.amount=e.getRandomInt(20,130)}t.$inject=["$scope","demoSvc"],angular.module("devApp").controller("numberCtrl",t)}(),function(){"use strict";angular.module("devApp").factory("demoSvc",function(){var t={};return t.getRandomInt=function(t,e){return parseInt(Math.random()*(e-t)+t)},t.getRandomDecimal=function(t,e){return parseFloat((Math.random()*(e-t)+t).toFixed(2))},t.getRandomDate=function(){var e=parseInt(t.getRandomDecimal(1,99)),a=new Date;return a.setDate(a.getDate()+e),a},t})}(),function(){"use strict";function t(t,e){t.calc={operator:"add"},t.rollConfig={filter:"date",filterParams:"MM/dd/yyyy",rollAll:!0},t.updateDate=function(){var e=new Date(t.dateValue.valueOf());switch(t.calc.operator){case"add":e.setDate(t.dateValue.getDate()+t.calc.amount);break;case"substract":e.setDate(t.dateValue.getDate()-t.calc.amount)}t.dateValue=e},t.changeAmt=function(){t.calc.amount=e.getRandomInt(1,16)},t.dateValue=e.getRandomDate(),t.calc.amount=e.getRandomInt(1,16)}t.$inject=["$scope","demoSvc"],angular.module("devApp").controller("dateCtrl",t)}(),function(){"use strict";function t(t,e){t.calc={operator:"add"},t.rollConfig={filter:"currency"},t.updateNumeric=function(){var e=t.numericValue;switch(t.calc.operator){case"add":e+=t.calc.amount;break;case"substract":e-=t.calc.amount;break;case"multiply":e*=t.calc.amount}t.numericValue=e},t.changeAmt=function(){t.calc.amount=e.getRandomDecimal(20.01,130.99)},t.numericValue=e.getRandomDecimal(.01,400.99),t.calc.amount=e.getRandomDecimal(20.01,130.99)}t.$inject=["$scope","demoSvc"],angular.module("devApp").controller("currencyCtrl",t)}(),function(){"use strict";function t(t,e){t.rollConfig={filter:"date",filterParams:"MMM dd, yyyy - HH:mm:ss"};var a=function(){t.timeLeft=new Date,l=e(a,1e3)},l=e(a,1e3);t.timeLeft=new Date}t.$inject=["$scope","$timeout"],angular.module("devApp").controller("clockCtrl",t)}(),function(){"use strict";angular.module("devApp").component("controls",{templateUrl:"app/components/controls.html",bindings:{targetValue:"<",onAdd:"&"},controller:["$scope",function(t){t.init=function(){t.calc={operation:"add"}},t.init()}]})}(),function(){"use strict";function t(t){t.state("index",{url:"",views:{demoNumber:{templateUrl:"app/demos/number.html",controller:"numberCtrl"},demoCurrency:{templateUrl:"app/demos/currency.html",controller:"currencyCtrl"},demoDate:{templateUrl:"app/demos/date.html",controller:"dateCtrl"},demoCountDown:{templateUrl:"app/demos/clock.html",controller:"clockCtrl"}}})}t.$inject=["$stateProvider"],angular.module("devApp").config(t)}(),angular.module("devApp").run(["$templateCache",function(t){t.put("app/components/controls.html",'<form class="form-horizontal"><label class="radio-inline"><input type="radio" name="inlineRadioOptions" ng-model="$ctrl.calc.operator" value="add">Add</label> <label class="radio-inline"><input type="radio" name="inlineRadioOptions" ng-model="$ctrl.calc.operator" value="substract">Substract</label> <label class="radio-inline"><input type="radio" name="inlineRadioOptions" ng-model="$ctrl.calc.operator" value="multiply">Multiply</label></form>'),t.put("app/demos/clock.html",'<div class="row"><div class="col-sm-5"><h3>Clock</h3><p>Clock demo using styling.</p></div><div class="col-sm-7"><div style="background-color: #333; text-align:center;-webkit-box-shadow:inset 0px 0px 10px #222;box-shadow:inset 0px 0px 10px #222;-webkit-border-radius:5px;border-radius:5px;"><ng-text-roll style="color: white;" target="timeLeft" height="25px" config="rollConfig"></ng-text-roll></div></div></div>'),t.put("app/demos/currency.html",'<div class="row"><div class="col-sm-6"><h3>Currency</h3><p>Here is a demo displaying rolling characters as a price changes. Feel free to use styles :) This demo is using:</p><p style="font-family:monospace;">color: green; font-family: \'Times New Roman\'; letter-spacing: 3px; font-style: italic;</p><p></p></div><div class="col-sm-6">The price is<ng-text-roll style="color: green; font-family: \'Times New Roman\'; letter-spacing: 3px; font-style: italic;" target="numericValue" height="25px" config="rollConfig"></ng-text-roll>for some items.<ul><li><input type="radio" ng-model="calc.operator" value="add"> Add</li><li><input type="radio" ng-model="calc.operator" value="substract"> Substract</li><li><input type="radio" ng-model="calc.operator" value="multiply"> Multiple</li></ul><button type="button" class="btn btn-primary" ng-click="updateNumeric()">{{calc.operator}} {{calc.operator == \'multiply\' ? \'by\' : \'\'}} {{calc.amount}}</button> <button type="button" class="btn btn-info" ng-click="changeAmt()">new delta</button></div></div>'),t.put("app/demos/date.html",'<div class="row"><div class="col-sm-6"><h3>Date</h3><p>Utilize the \'filterParams\' property of the config object to format dates (and currency, etc.). This demo is also showing rolling all characters can be enabled.</p></div><div class="col-sm-6"><p>The date<ng-text-roll target="dateValue" height="18px" config="rollConfig"></ng-text-roll>is a date!</p><ul><li><input type="radio" ng-model="calc.operator" value="add"> Add</li><li><input type="radio" ng-model="calc.operator" value="substract"> Substract</li></ul><button type="button" class="btn btn-primary" ng-click="updateDate()">{{calc.operator}} by {{calc.amount}} days</button> <button type="button" class="btn btn-info" ng-click="changeAmt()">new delta</button></div></div>'),t.put("app/demos/number.html",'<div class="row"><div class="col-sm-6"><h3>Number</h3><p>This demo shows how ngTextRoll can tumble characters as a number changes. A blur is added when the lenth of the string changes to prevent character stacking for proportional fonts.</p></div><div class="col-sm-6"><p>There are<ng-text-roll target="numericValue" height="16px"></ng-text-roll>items.</p><controls></controls><ul><li><input type="radio" ng-model="calc.operator" value="add"> Add</li><li><input type="radio" ng-model="calc.operator" value="substract"> Substract</li><li><input type="radio" ng-model="calc.operator" value="multiply"> Multiple</li></ul><button type="button" class="btn btn-primary" ng-click="updateNumeric()">{{calc.operator}} {{calc.operator == \'multiply\' ? \'by\' : \'\'}} {{calc.amount}}</button> <button type="button" class="btn btn-info" ng-click="changeAmt()">new delta</button></div></div>')}]);